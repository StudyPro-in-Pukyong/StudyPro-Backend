# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Fly Deploy

on:
  push:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # GitHub 레포지토리 체크아웃
      - name: Checkout code
        uses: actions/checkout@v3

      # Java 설정
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      # 환경 변수 파일 생성 (.env)
      - name: Create .env file
        run: |
          echo "${{ secrets.STUDYPRO_ENV }}" >> .env

      # Firebase JSON 파일 생성
      - name: Create Firebase credentials file
        run: |
          mkdir -p src/main/resources/firebase
          echo "${{ secrets.STUDYPRO_FIREBASE_CREDENTIALS }}" > src/main/resources/firebase/studypro-firebase-adminsdk.json

      # Gradle 빌드
      - name: Build with Gradle
        uses: gradle/gradle-build-action@v2.9.0
        with:
          arguments: clean build openapi3

      # Docker 이미지 빌드
#      - name: Build Docker Image
#        run: docker-compose build
      # Docker 이미지 빌드
      - name: Build Docker Image
        run: docker build -t studypro:latest .

      # Flyctl 설치
      - name: Install Flyctl
        run: |
          curl -L https://fly.io/install.sh | sh
          echo "export PATH=$HOME/.fly/bin:$PATH" >> $GITHUB_ENV

      # Fly.io 로그인
      - name: Authenticate with Fly.io
        env:
          FLY_API_TOKEN: ${{ secrets.STUDYPRO_FLY_API_TOKEN }}
        run: fly auth token $FLY_API_TOKEN

      # Fly.io로 Docker 이미지 푸시
      - name: Push Docker Image to Fly.io
        run: |
          fly deploy --image studypro:latest

      # Fly.io로 Docker 이미지 푸시 및 배포
      - name: Deploy Docker Image to Fly.io
        run: fly deploy --remote-only

      # Jar 파일 보기
#      - name: Send jar file
#        uses: appleboy/scp-action@master
#        with:
#          username: ubuntu
#          host: ${{ secrets.HOST }}
#          key: ${{ secrets.PRIVATE_KEY }}
#          source: "./build/libs/*.jar,./src/main/resources/static/swagger/*"
#          target: "/home/ubuntu/server"
#
#      - name: Deploy
#        uses: appleboy/ssh-action@master
#        with:
#          username: ubuntu
#          host: ${{ secrets.HOST }}
#          key: ${{ secrets.PRIVATE_KEY }}
#          script_stop: true
#          script: sudo /home/ubuntu/run_server.sh
